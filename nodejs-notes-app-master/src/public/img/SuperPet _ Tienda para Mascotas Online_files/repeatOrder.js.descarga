/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 82);
/******/ })
/************************************************************************/
/******/ ({

/***/ 4:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (include) {
    if (typeof include === 'function') {
        include();
    } else if (typeof include === 'object') {
        Object.keys(include).forEach(function (key) {
            if (typeof include[key] === 'function') {
                include[key]();
            }
        });
    }
};


/***/ }),

/***/ 82:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var processInclude = __webpack_require__(4);

$(document).ready(function () {
    processInclude(__webpack_require__(83));
});


/***/ }),

/***/ 83:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//Debug var
var debugRepeatOrder = false;

if(debugRepeatOrder==true)
	console.log('Debug: RepeatOrder Trace: repeatOrder.js loaded!');


/*
 * A visitor repeats order
 */
function repeatOrderTrakingCart() {
	
	var id = jQuery('#marketingID').val();
	var mcIncludeTrackingLink = jQuery('#mcIncludeTrackingLink').val();
	
	if(mcIncludeTrackingLink == "true" && id != "null"){	
		var returnCurrentBasket = jQuery('#returnCurrentBasket').val();		
		jQuery.getJSON( returnCurrentBasket, {		
		})
		.done(function(data) {
			if(data != null)
			{	
				var locale = ($('html').attr('lang') == 'es') ? 'ES' : 'PT';
				
				_etmc.push(["setOrgId", id]);
				_etmc.push(["setUserInfo", { "details": {
			        "locale": locale,
			        "cartID": data.basketUUID,
			        "total_price": data.totals.grandTotal
				}}]);  
			    _etmc.push(["trackPageView"]);
			    
				var cart = [];	
				if(data.items.length>0){
					data.items.forEach(function (item) {
						 var obj = {
								 item: 		item.id,
								 quantity :	item.quantity,
								 price: 	item.price.sales.value,
								 unique_id: item.id
						 };
						 cart.push(obj);	       
					});			
				    _etmc.push(["trackCart", {cart}]);  				    
				}
			}
		});	
	}	
}


//Repeat Order Event: Calls to a controller in order to add the products in the Cart.
jQuery(".repeat-order").click(function(){
	
	if(debugRepeatOrder==true)
		console.log('RepeatOrder Trace: Send data for OrderId: '+jQuery(this).attr('order-id'));
	
	var orderId = jQuery(this).attr('order-id');
	var repeatOrderController = jQuery('#repeatOrderController').val();
	var cartController = jQuery('#cartController').val();
	
	jQuery.fn.showHide = function () {
		this.removeClass('d-none');
		this.addClass('d-inline');
		this.siblings().addClass('d-none');
		this.siblings().removeClass('d-inline');
	};
	
	jQuery.getJSON( repeatOrderController, {
		orderID: orderId
	})
	.done(function(data) {
		console.log('RepeatOrder Trace: Debug Result: '+data.result.status+data);
		if(data.result.status == 'OK')
		{
			jQuery('#repeatOrderOK span').text(data.result.message);
			jQuery('#repeatOrderOK').showHide();
			setTimeout(function(){
				//window.self.location.reload();
				window.location=cartController;
			}, 10000);
		}
		else
		{
			var productsOutOfStock = [];
			var errorsData = data.result.error;
			for(var i=0; i<data.result.error.length; i++)
			{
				productsOutOfStock.push(errorsData[i].productName);
			}
			var productsSkusOutOfStock = productsOutOfStock.join();
			jQuery('#productsSkusOutOfStock').html(productsSkusOutOfStock);
			jQuery('#repeatOrderKO').showHide();
			
		}
		jQuery('#repeatOrderMessage').modal('show');
		repeatOrderTrakingCart();
		
	})
	.fail(function() {
	    console.log( "RepeatOrder Trace: Cann't reach the controller!" );
		jQuery('#repeatOrderError').showHide();
		jQuery('#repeatOrderMessage').modal('show');	    
	})
	.always(function() {
		if(debugRepeatOrder==true)
			console.log( "RepeatOrder Trace: AJAX request executed." );
	});	
});

//Return Order click-event: Opens a form in a modal layer in order to send it to SFSC.
jQuery(".return-order").click(function(){
	
	jQuery("#returnFormSuccesMessage").addClass('d-none');
	jQuery("#returnFormErrorMessage").addClass('d-none');
	jQuery("#returnFormSuccesMessage").removeClass('d-inline');
	jQuery("#returnFormErrorMessage").removeClass('d-inline');
	
	var orderId = jQuery(this).attr('order-id');
	
	jQuery('#returnOrderFormOrderId').val(orderId);
	jQuery('#returnOrderFormOrderNumber').html('#'+orderId);
	jQuery('#customerEmailInfo').html(jQuery('#returnOrderFormMail').val());
	jQuery('#returnOrderForm').modal('show');
	
});

//Send ReturnOrder Form-Button:
jQuery("#sendReturnOrderForm").click(function(){
	
	var returnOrderFormOrderId	= jQuery('#returnOrderFormOrderId').val();
	var returnOrderController	= jQuery('#returnOrderController').val();
	var returnOrderFormBody		= jQuery('#returnOrderFormBody').val();
	var returnOrderFormMail		= jQuery('#returnOrderFormMail').val();
		
	//Basic Validation
	if(returnOrderFormBody=="")
	{
		jQuery('#returnOrderFormBody').addClass('is-invalid');
		return false;
	}
	
	jQuery(this).attr('disabled',true);
	
	//Send data to controller: contactEmail , contactComment  (based on ContactForm)
	jQuery.post(returnOrderController,
	{
		contactEmail: returnOrderFormMail,
		contactComment: returnOrderFormBody+"\n\nOrder NÂº: "+returnOrderFormOrderId,
		orderNo: returnOrderFormOrderId,
	},
		function(data, status)
		{
			if(debugRepeatOrder==true)
				console.log("Data: " + data + " Status: " + status, data);
			
			if(status=='success' && data.success==true)
			{
				if(debugRepeatOrder==true)
					console.log("Form Sent Successfully!!");
				jQuery("#returnFormSuccesMessage").removeClass('d-none');
				jQuery("#returnFormSuccesMessage").addClass('d-inline');
			}
			else
			{
				if(debugRepeatOrder==true)
					console.log("Form Sent Error!!");
				jQuery("#returnFormErrorMessage").removeClass('d-none');
				jQuery("#returnFormErrorMessage").addClass('d-inline');
				jQuery(this).attr('disabled',false);
			}
		}
	);	
});



/***/ })

/******/ });